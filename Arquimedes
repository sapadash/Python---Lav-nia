""" Método de Arquimedes """

import math
import pandas as pd

def poligono(s,r):

  """
  define o lado do próximo polígono inscrito que tem o dobro de lados do]
  anterior, retorna esse lado como s atualizado
  """
  a = math.sqrt(1-(s/2)**2)
  b = 1 - a
  s = math.sqrt(b**2+((s/2)**2))
  return s

def arpimedes(N,r):
    """
    calcula  o valor estimado de pi usando o metodo de arquimedes e um
    polígono de N lados inscrito em um círculo de raio R.
    retorna o valor estimado de pi.

    como começamos com um hexágono temos as seguintes condições:
    - se N = 6 * 2^k, ele vai iterar até um valor dado.
    - se não, calcula pelo comprimento do lado:
        6s = 2 * pi * R, onde R e s = 1
    """
    if N < 3:
      print("O número de lados deve ser >= 3")

    """verifica que N é multiplo de 6*2k
    faz uma cópia de N, para não alterar o valor original
    inicia k em zero
    verifica que n é par vendo que o resto da divisão por 2 é zero
    e que n é maior que 6
    enquanto isso for verdade, divide n por 2 e conta com k quantas vezes
    dobramos o numero de lados
    """
    n = N
    k = 0
    while n % 2 == 0 and n > 6:
        n //= 2
        k += 1

    s = r # Initialize s before the loop

    for i in range(k):
          """inicia a iteração k times até chegar no polígono de N lados"""
          s = poligono(s, r)
          """formula para calcular pi com o método de arquimedes : pi=(N.s/2R)"""
    pi_est = (N * s) / (2 * r)
    return pi_est


def resultados_arpimedes(iteracoes=4, r=1):
    """
    gera uma lista de valores estimados de pi começando do hexágono de raio r,
    e dobrando o número de lados em cada iteração.
    """
    resultados = []
    N = 6
    s = r
    pi_est = (N * s) / (2 * r)
    resultados.append((N, pi_est))

    for i in range(iteracoes):
        s = poligono(s, r)
        N *= 2 #multiplica por 2 em cada iteração
        pi_est = (N * s) / (2 * r)
        resultados.append((N, pi_est))

    return resultados

"""gera resultados e converte em uma tabela"""
dados = resultados_arpimedes()

"""cria um dataframe com a lista"""
tabela = pd.DataFrame(dados, columns=["Número de lados (N)", "π estimado"])

"""printa a tabela"""
print(tabela)
